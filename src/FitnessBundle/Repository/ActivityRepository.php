<?php

namespace FitnessBundle\Repository;

use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\Mapping\ClassMetadata;
use FitnessBundle\Entity\Activity;
use FitnessBundle\Entity\User;


/**
 * ActivityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ActivityRepository extends \Doctrine\ORM\EntityRepository
{
	/** @var EntityManagerInterface $em */
	private $em;

	/**
	 * ActivityRepository constructor.
	 * @param EntityManagerInterface $em
	 */
	public function __construct(EntityManagerInterface $em)
	{
		$this->em = $em;
		parent::__construct($em, new ClassMetadata(Activity::class));
	}


	public function save(Activity $activity): bool
	{
		try {
			$this->em->persist($activity);
			$this->em->flush();

			return true;

		} catch (\Exception $e) {

			return false;
		}
	}

	public function findOneById(int $id)
	{
		try {

			return $this->em->find(Activity::class, $id);
//			$result = $this
//				->createQueryBuilder('u')
////				 add this to also load the related roles entities
//				->addSelect('a')
////				 Where roles is your property name in the User entity
//				->leftJoin('u.trainersActivities', 'a')
//				->where('a.id = :id')
//				->setParameter('id', $id)
//				->getQuery()
//				->getResult();

//			$result = $this->getEntityManager()
//				->createQuery(
//					'SELECT a, u FROM Activity a
//                            join  u.user u
//                            WHERE u.id = :id'
//				)->setParameter('id', $id)
//				->getResult();



//			return $result;

		} catch (\Exception $e) {

			return null;
		}
	}

	public function findAllActivities()
	{
		try {

			return $this->findAll();

		} catch (\Exception $e) {

			return null;
		}
	}

	public function addClient($data)
	{

		try {

			return $this->findAll();
		} catch (\Exception $e) {

			return null;
		}
	}

	public function selectById($id)
	{
		try {
			$activity = $this->find($id);
			return $activity->getClients();
		} catch (\Exception $e) {
			return null;
		}
	}
}
